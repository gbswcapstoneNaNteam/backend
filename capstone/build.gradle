	plugins {
		id 'org.springframework.boot' version '2.5.4'
		id 'io.spring.dependency-management' version '1.0.11.RELEASE'
		id 'java'
	}


	group = 'gbsw.example'
	version = '0.0.1-SNAPSHOT'


	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
		testImplementation 'junit:junit:4.13.1'
		compileOnly 'org.projectlombok:lombok'
		runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		implementation 'org.webjars.npm:typescript:4.5.5'
		implementation 'org.webjars.npm:react:17.0.2'
		implementation 'org.webjars.npm:react-dom:17.0.2'
		implementation 'org.webjars.npm:js-tokens:3.0.2'
		implementation 'org.springframework.boot:spring-boot-starter-webflux'

	}

	tasks.named('test') {
		useJUnitPlatform()
	}



	def frontendDir = "$projectDir/src/main/frontend"

	sourceSets {
		main {
			resources { srcDirs = ["$projectDir/src/main/resources"]
			}
		}
	}

	processResources { dependsOn "copyReactBuildFiles" }

	task installReact(type: Exec) {
		workingDir "$frontendDir"
		inputs.dir "$frontendDir"
		group = BasePlugin.BUILD_GROUP
		if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
			commandLine "npm.cmd", "audit", "fix"
			commandLine "npm.cmd", "install"
		} else {
			commandLine "npm", "audit", "fix"
			commandLine "npm", "install"
		}

	}

	task buildReact(type: Exec) {
		dependsOn "installReact"
		workingDir "$frontendDir"
		inputs.dir "$frontendDir"
		group = BasePlugin.BUILD_GROUP
		if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
			commandLine "npm.cmd", "run-script", "build"
		} else {
			commandLine "npm", "run-script", "build"
		}
	}

	task copyReactBuildFiles(type: Copy) {
		dependsOn "buildReact"
		from "$frontendDir/build"
		into "$projectDir/src/main/resources/static"
	}
